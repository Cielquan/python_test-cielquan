#: Workaround for https://github.com/actions/virtual-environments/issues/1281
#: Dummy tests for pleasing PR merge requirements
# NOTE: DO NOT FORGET TO UPDATE `test-code.yml` TOO !!!
---
name: Test code (Skip)

on: # yamllint disable-line rule:truthy
  pull_request:
    branches:
      - "**"
    paths-ignore:
      #: Source/Test changes
      - "src/**/*.py"
      - "tests/**/*.py"
      #: Dependency changes
      - "poetry.lock"
      - "pyproject.toml"
      #: Test config changes
      - "tox.ini"
      - "noxfile.py"
      - ".github/workflows/test-code.yml"

jobs:
  pyproject-config:
    name: Get config from pyproject.toml
    runs-on: ubuntu-latest
    outputs:
      test_os: ${{ steps.get-config.outputs.test_os }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2

      - name: Install poetry
        run: |
          python -m pip install -U pip
          pip install -U poetry

      - name: Install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry install --no-root --no-dev --extras tomlkit

      - name: Get config
        id: get-config
        shell: python
        run: |
          import tomlkit

          with open("pyproject.toml") as pyproject_file:
              PYPROJECT = tomlkit.parse(pyproject_file.read())

          test_os = {"os": PYPROJECT["tool"]["_testing"]["ci_test_os"]}
          print(f"::set-output name=test_os::{test_os}")

  test-code:
    name: nox / test_code / ${{ matrix.os }}
    needs: pyproject-config
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.pyproject-config.outputs.test_os) }}
    steps:
      - run: exit 0

  report-coverage:
    name: tox / coverage-report
    runs-on: ubuntu-latest
    steps:
      - run: exit 0
