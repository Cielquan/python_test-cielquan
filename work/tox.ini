[tox]
package = root

minversion = 3.15.0
requires = tox-envlist
skip_missing_interpreters = true
skip_missing_interpreters = true
#: Activate isolated build environment - PEP-517/518.
isolated_build = true
#: Application -> true; Library -> false
skipsdist = true

[envlists]
test = py{310}-{admin,api},coverage-all-{admin,api}
qa = safety-{admin,api},pre-commit-{admin,api}
docs-test = docs-test-{html,linkcheck,coverage,doctest,spelling,confluence}
package-all = package-{admin,api}


[testenv]
description = basic config env
basepython = python3.10
passenv =
    HOME
    CI
setenv =
    PIP_DISABLE_VERSION_CHECK = 1
download = true
skip_install = true
deps = git+https://github.com/python-poetry/poetry.git@1196923dd637ca5cca3b8259a5c9cfabe87649cc


[testenv:safety-{admin,api}]
description = check all dependencies for known vulnerabilities
setenv =
    {[testenv]setenv}
    admin: TOXENV_INSTALL_GROUPS=poetry,swlp-admin
    api: TOXENV_INSTALL_GROUPS=poetry,swlp-api
skip_install = true
deps =
    {[testenv]deps}
    safety>=1.10.2
commands_pre =
    poetry install {tty:--ansi:} --no-interaction --sync --only {env:TOXENV_INSTALL_GROUPS}
commands =
    pip list
    safety check --full-report


[testenv:mypy-{admin,api}]
description = type check python source
setenv =
    {[testenv]setenv}
    admin: TOXENV_INSTALL_GROUPS=poetry,mypy,testing,docs,swlp-admin
    api: TOXENV_INSTALL_GROUPS=poetry,mypy,testing,docs,swlp-api
ignore_errors = true
commands_pre =
    poetry install {tty:--ansi:} --no-interaction --sync --only {env:TOXENV_INSTALL_GROUPS}
commands =
    admin: mypy bin/swlp-admin
    api: mypy bin/swlp-api
    mypy docs


[testenv:pylint-{admin,api}]
description = run pylint linter
setenv =
    {[testenv]setenv}
    admin: TOXENV_INSTALL_GROUPS=poetry,pylint,testing,docs,swlp-admin
    admin: TOXENV_DEFAULT_POSARGS=bin/swlp-admin docs
    api: TOXENV_INSTALL_GROUPS=poetry,pylint,testing,docs,swlp-api
    api: TOXENV_DEFAULT_POSARGS=bin/swlp-api docs
skip_install = false
commands_pre =
    poetry install {tty:--ansi:} --no-interaction --sync --only {env:TOXENV_INSTALL_GROUPS}
commands =
    pylint --disable=spelling {posargs:{env:TOXENV_DEFAULT_POSARGS}}


[testenv:package-{admin,api}]
description = check sdist and wheel
envdir = {toxworkdir}/package
setenv =
    {[testenv]setenv}
    PATH = {toxinidir}/scripts/{:}{env:PATH}
whitelist_externals =
    admin: admin
    api: api
skip_install = true
deps =
    {[testenv]deps}
    twine>=3.3
commands =
    admin: admin poetry build {tty:--ansi:} --no-interaction -vvv
    admin: admin twine check --strict dist/*
    api: api poetry build {tty:--ansi:} --no-interaction -vvv
    api: api twine check --strict dist/*


[testenv:py{310}-{admin,api}]
description = run tests with {basepython}
passenv =
    {[testenv]passenv}
    PYTEST_*
setenv =
    {[testenv]setenv}
    admin: TOXENV_INSTALL_GROUPS=poetry,testing,swlp-admin
    admin: COVERAGE_FILE={toxinidir}/.coverage_cache/swlp-admin/.coverage.{envname}
    admin: TOXENV_COV_TARGET={envsitepackagesdir}/swlp_admin
    admin: TOXENV_JUNIT_FILE={toxinidir}/.junit_cache/swlp-admin/junit.{envname}.xml
    admin: TOXENV_DEFAULT_POSARGS=bin/swlp-admin/tests
    api: TOXENV_INSTALL_GROUPS=poetry,testing,swlp-api
    api: COVERAGE_FILE={toxinidir}/.coverage_cache/swlp-api/.coverage.{envname}
    api: TOXENV_COV_TARGET={envsitepackagesdir}/swlp_api
    api: TOXENV_JUNIT_FILE={toxinidir}/.junit_cache/swlp-api/junit.{envname}.xml
    api: TOXENV_DEFAULT_POSARGS=bin/swlp-api/tests
commands_pre =
    poetry install {tty:--ansi:} --no-interaction --sync --only {env:TOXENV_INSTALL_GROUPS}
commands =
    pytest \
        {tty:--color yes:} \
        --basetemp {envtmpdir} \
        --cov {env:TOXENV_COV_TARGET} \
        --cov-fail-under 0 \
        --junitxml {env:TOXENV_JUNIT_FILE} \
        --numprocesses {env:PYTEST_XDIST_N:auto} \
        {posargs:{env:TOXENV_DEFAULT_POSARGS}}


[testenv:coverage-{all,merge,report}-{admin,api}]
description =
    all,merge: combine coverage data and create xml/html reports;
    all,report: report total and diff coverage against origin/master (or DIFF_AGAINST)
depends =
    admin: py{310}-admin
    api: py{310}-api
passenv =
    {[testenv]passenv}
    all,report: MIN_COVERAGE
    all,report: MIN_DIFF_COVERAGE
    all,report: DIFF_AGAINST
    all,report: DIFF_RANGE_NOTATION
setenv =
    {[testenv]setenv}
    admin: COVERAGE_FILE={toxinidir}/.coverage_cache/swlp-admin/.coverage
    admin: TOXENV_COVERAGE_XML={toxinidir}/.coverage_cache/swlp-admin/coverage.xml
    admin: TOXENV_COVERAGE_HTML={toxinidir}/.coverage_cache/swlp-admin/htmlcov
    api: COVERAGE_FILE={toxinidir}/.coverage_cache/swlp-api/.coverage
    api: TOXENV_COVERAGE_XML={toxinidir}/.coverage_cache/swlp-api/coverage.xml
    api: TOXENV_COVERAGE_HTML={toxinidir}/.coverage_cache/swlp-api/htmlcov
skip_install = true
deps = git+https://github.com/python-poetry/poetry.git@1196923dd637ca5cca3b8259a5c9cfabe87649cc
parallel_show_output = true
ignore_errors = true
commands_pre =
    poetry install {tty:--ansi:} --no-interaction --sync --only poetry,coverage
commands =
    all,merge:  coverage combine
    all,merge:  coverage xml -o {env:TOXENV_COVERAGE_XML}
    all,merge:  coverage html -d {env:TOXENV_COVERAGE_HTML}
    all,report: coverage report -m --fail-under {env:MIN_COVERAGE:100}
    all,report: diff-cover --compare-branch {env:DIFF_AGAINST:origin/main} \
    all,report:     --ignore-staged --ignore-unstaged \
    all,report:     --fail-under {env:MIN_DIFF_COVERAGE:100} \
    all,report:     --diff-range-notation {env:DIFF_RANGE_NOTATION:..} \
    all,report:     {env:TOXENV_COVERAGE_XML}


[testenv:docs{,-auto}]
description = build docs with sphinx
envdir = {toxworkdir}/docs
setenv =
    {[testenv]setenv}
    TOXENV_BUILDCMD = sphinx-build {tty:--color:}
    auto: TOXENV_BUILDCMD = sphinx-autobuild
commands_pre =
    poetry install {tty:--ansi:} --no-interaction --sync --only poetry,docs,swlp-admin,swlp-api
commands =
    # Build fresh docs
    {env:TOXENV_BUILDCMD} -b html -aE docs/source docs/build/html
    # Output link to index.html
    python -c \
       'from pathlib import Path; \
        index_file = Path(r"{toxinidir}")/"docs/build/html/index.html"; \
        print(f"DOCUMENTATION AVAILABLE UNDER: \{index_file.as_uri()\}")'


[testenv:docs-test-{html,linkcheck,coverage,doctest,spelling,confluence}]
description = Build and check docs with (see env name) sphinx builder
envdir = {toxworkdir}/docs
setenv =
    {[testenv]setenv}
    html:       TOXENV_BUILDER = html
    linkcheck:  TOXENV_BUILDER = linkcheck
    coverage:   TOXENV_BUILDER = coverage
    doctest:    TOXENV_BUILDER = doctest
    spelling:   TOXENV_BUILDER = spelling
    confluence: TOXENV_BUILDER = confluence
    confluence: TOXENV_ADD_ARGS = -t builder_confluence
commands_pre =
    {[testenv:docs]commands_pre}
commands =
    sphinx-build {tty:--color:} -b {env:TOXENV_BUILDER} \
        -aE -v -nW --keep-going {env:TOXENV_ADD_ARGS:} \
        docs/source docs/build/test/{env:TOXENV_BUILDER}
