---
minimum_pre_commit_version: "2.16"
default_stages: [pre-commit]
default_language_version:
  python: python3.12

ci:
  skip: [mypy, flakeheaven, pylint]

repos:
  # ----------------------------------------------
  # Branch guard hook
  # ----------------------------------------------

  # git context checking out-of-the-box hooks
  # - repo: https://github.com/pre-commit/pre-commit-hooks
  #   rev: 8fe62d14e0b4d7d845a7022c5c2c3ae41bdd3f26 # frozen: v4.1.0
  #   hooks:
  #     - id: no-commit-to-branch
  #       args: [--branch, main, --branch, master]
  #       fail_fast: true

  # ----------------------------------------------
  # Meta hooks
  # ----------------------------------------------

  - repo: meta
    hooks:
      - id: identity
        stages: [pre-commit, manual]
      - id: check-hooks-apply
        stages: [manual]
      - id: check-useless-excludes
        stages: [manual]

  # ----------------------------------------------
  # File hooks
  # ----------------------------------------------

  # file checking out-of-the-box hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: cef0300fd0fc4d2a87a85fa2093c6b283ea36f4b  # frozen: v5.0.0
    hooks:
      - id: check-case-conflict
      - id: check-shebang-scripts-are-executable
        exclude: '^.*\.rs$'
      - id: check-symlinks
      - id: destroyed-symlinks
      - id: forbid-new-submodules

  # ----------------------------------------------
  # Dependency hooks
  # ----------------------------------------------

  # poetry - python dependency management
  - repo: https://github.com/Cielquan/mirrors-poetry
    rev: 39c8053fdda4f42d75b365076cdddb0381c1f17f  # frozen: 2.1.3
    hooks:
      # Config file: pyproject.toml
      - id: poetry-lock
        args: ["--check", "--no-update"]

  # safety - python dependency vulnerability checker
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: 5824be5a3fde4f524ef7412f55b284584946bf81  # frozen: v1.4.2
    hooks:
      - id: python-safety-dependencies-check
        args: ["--full-report"]
        files: pyproject.toml

  # pipenv - python dependency management
  - repo: local
    hooks:
      # Config file: Pipfile
      - id: pipenv-verify
        name: pipenv-verify
        description: verify python dependency lock file is up-to-date
        language: python
        additional_dependencies: ["pipenv"]
        entry: pipenv
        args: ["verify"]
        pass_filenames: false
        require_serial: true
        files: ^Pipfile$

  # ####################################################################################
  #
  #       FORMATTING
  #
  # ####################################################################################

  # ----------------------------------------------
  # Python
  # ----------------------------------------------

  # ruff - python linter with fixing ability
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: f0fe93c067104b76ffb58852abe79673a8429bd1  # frozen: v0.11.8
    hooks:
      - id: ruff
        name: ruff (fix)
        args: ["--fix-only", "--exit-non-zero-on-fix"]
      - id: ruff-format
        name: ruff (format)

  # blacken-docs - black for python code in docs (rst/md/tex)
  - repo: https://github.com/asottile/blacken-docs
    rev: 78a9dcbecf4f755f65d1f3dec556bc249d723600  # frozen: 1.19.1
    hooks:
      # Config file: same as `black`
      # Inline skip: same as `black`
      - id: blacken-docs
        args: ["--line-length=100", "--target-version=py312"]

  # ----------------------------------------------
  # Rust
  # ----------------------------------------------

  # rust toolchain
  - repo: local
    hooks:
      # rustfmt - rust formatter
      # Config file: rustfmt.toml
      - id: cargo-fmt
        name: rustfmt
        description: Format rust source with rustfmt.
        entry: cargo fmt
        args: ["--"]
        language: system
        types: [rust]

# ----------------------------------------------
  # JavaScript
  # ----------------------------------------------

  # eslint - JS linter (run as formatter - also run as linter afterwards (below))
  - repo: https://github.com/eslint/eslint
    # Config file: .eslintrc.json | "eslintConfig" key in package.json |
    #     https://eslint.org/docs/user-guide/configuring/configuration-files
    # Ignore file: .eslintignore [file ignore pattern]
    rev: 9f8178610fb6fbdb8f6c7bb9b15ec30bb2b138bc  # frozen: v9.26.0
    hooks:
      - id: eslint
        name: eslint (fix)
        stages: ["pre-commit"]
        files: '\.[jt]sx?$' # *.js, *.jsx, *.ts, *.tsx
        types: [file]
        args: ["--fix", "--max-warnings=0"]
        require_serial: true
        additional_dependencies:
          - "@typescript-eslint/eslint-plugin@^7.15.0"
          - typescript@~5.3.3
          - eslint@^8.57 # NOTE: version overwrites rev version - keep in sync
          - confusing-browser-globals@^1.0.11
          - eslint-config-next@^14.2.4
          - eslint-config-prettier@^9.1.0
          - eslint-plugin-chai-friendly@^1.0.0
          - eslint-plugin-cypress@^3.3.0
          - eslint-plugin-jest@^28.6.0
          - eslint-plugin-jest-dom@^5.4.0
          - eslint-plugin-prettier@^5.1.3
          - eslint-plugin-testing-library@^6.2.2
          - prettier@^3.3.2
          - prettier-plugin-tailwindcss@^0.6.5

  # ----------------------------------------------
  # JS / TS / HTML / CSS / MD / JSON / YAML
  # ----------------------------------------------

  # prettier - multi formatter
  - repo: https://github.com/pre-commit/mirrors-prettier
    # https://github.com/prettier/prettier
    # Config file: "prettier" key package.json | .prettierrc | .prettierrc.json |
    #     https://prettier.io/docs/en/configuration.html
    # Ignore file: .prettierignore [file ignore pattern]
    rev: f12edd9c7be1c20cfa42420fd0e6df71e42b51ea  # frozen: v4.0.0-alpha.8
    hooks:
      - id: prettier
        additional_dependencies:
          - prettier@^3.3.2 # NOTE: version overwrites rev version - keep in sync
          - prettier-plugin-tailwindcss@^0.6.5
        args: ["--ignore-path", ".gitignore"]
        files: \.(html|css|json)$

  # ----------------------------------------------
  # SQL
  # ----------------------------------------------

  # sqlfluff - SQL linter and formatter
  - repo: https://github.com/sqlfluff/sqlfluff
    # Config file: ".sqlfluff"
    # Ignore file: .sqlfluffignore [file ignore pattern]
    rev: 338ff784a3ead58a2c6e4e0f2e94e60ecb058ed6  # frozen: 3.4.0
    hooks:
      - id: sqlfluff-fix

  # ----------------------------------------------
  # Markdown
  # ----------------------------------------------

  # markdownlint - md file checker
  - repo: https://github.com/DavidAnson/markdownlint-cli2
    rev: d174eb7a8f35e05d4065c82d375ad84aa0b32352  # frozen: v0.17.2
    # Config files:
    # - .markdownlint-cli2.jsonc
    # - .markdownlint-cli2.yaml
    # - .markdownlint-cli2.cjs
    # - .markdownlint.jsonc or .markdownlint.json
    # - .markdownlint.yaml or .markdownlint.yml
    # - .markdownlint.cjs
    # Inline config:
    # Disable all rules: <!-- markdownlint-disable -->
    # Enable all rules: <!-- markdownlint-enable -->
    # Disable all rules for the next line only: <!-- markdownlint-disable-next-line -->
    # Disable rules by name: <!-- markdownlint-disable MD001 MD005 -->
    # Enable rules by name: <!-- markdownlint-enable MD001 MD005 -->
    # Disable rules by name for next line only: <!-- markdownlint-disable-next-line MD001 MD005 -->
    # Capture the current rule configuration: <!-- markdownlint-capture -->
    # Restore the captured rule configuration: <!-- markdownlint-restore -->
    hooks:
      - id: markdownlint-cli2
        args: ["--fix"]

  # ----------------------------------------------
  # Spelling dict
  # ----------------------------------------------

  # Custom hook as python command
  - repo: local
    hooks:
      - id: sort-spelling-dicts
        name: Sort spelling_dict.txt files
        description: Sort spelling_dict.txt files
        language: python
        entry: python
        args:
          - "-c"
          - |
            import pathlib;
            import sys;
            p = pathlib.Path(sys.argv[1]);
            p.write_text("\n".join(sorted(set(p.read_text("utf-8").splitlines()))) + "\n", "utf-8")
        files: "spelling_dict.txt"

  # ----------------------------------------------
  # General (code unspecific)
  # ----------------------------------------------

  # code unspecific out-of-the-box hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: cef0300fd0fc4d2a87a85fa2093c6b283ea36f4b  # frozen: v5.0.0
    hooks:
      - id: end-of-file-fixer
        stages: [pre-commit]
      - id: trailing-whitespace
        stages: [pre-commit]
        exclude: '\.tsx\.snap$'

  # ####################################################################################
  #
  #       LINTING
  #
  # ####################################################################################

  # ----------------------------------------------
  # General (code unspecific)
  # ----------------------------------------------

  - repo: local
    hooks:
      # Find TODO:|FIXME: comments in all files
      # Inline skip: `#i#` directly after the colon after the tag-word
      - id: find-todos
        name: "Find TODO:|FIXME: comments"
        description: "Check for TODO:|FIXME: comments in all files"
        language: pygrep
        entry: '(^|//!?|#|<!--|;|/\*(\*|!)?|\.\.)\s*(TODO:|FIXME:)(?!\s#i#)'
        exclude: TODO

  # code unspecific out-of-the-box hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: cef0300fd0fc4d2a87a85fa2093c6b283ea36f4b  # frozen: v5.0.0
    hooks:
      - id: check-merge-conflict
      - id: detect-private-key

  # ----------------------------------------------
  # Python
  # ----------------------------------------------

  # ruff - python linter with fixing ability
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: f0fe93c067104b76ffb58852abe79673a8429bd1  # frozen: v0.11.8
    hooks:
      - id: ruff
        name: ruff (lint)
      - id: ruff-format
        name: ruff (format-check)
        args: ["--diff"]

  # python specific out-of-the-box hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: cef0300fd0fc4d2a87a85fa2093c6b283ea36f4b  # frozen: v5.0.0
    hooks:
      - id: debug-statements
      - id: fix-encoding-pragma
        args: ["--remove"]
      - id: name-tests-test

  # Lint hooks managed via tox envs b/c they need the pkg installed
  - repo: local
    hooks:
      # mypy - python type checker
      # Config file: https://mypy.readthedocs.io/en/stable/command_line.html#config-file
      # Inline skip file: `# type: ignore` at top
      # Inline skip: `# type: ignore` or `# type: ignore[CODE, ...]`
      - id: mypy
        name: mypy
        description: run mypy over the installed package via tox
        entry: tox
        args: ["-e", "mypy"]
        language: python
        additional_dependencies: [tox]
        types: [python]
        pass_filenames: false
        require_serial: true

  # pylint - python linter
  - repo: https://github.com/PyCQA/pylint/
    rev: f798a4a3508bcbb8ad0773ae14bf32d28dcfdcbe  # frozen: v3.3.7
    hooks:
      # Inline skip file: `# pylint: skip-file`
      # Inline change: `# pylint: disable|enable=CODE|NAME`
      - id: pylint
        name: spell-check (pylint+pyenchant)
        description: >
          spell-check in docstrings/comments in py-source via pyenchant and pylint
        additional_dependencies: [pyenchant]
        args: ["--disable=all", "--enable=spelling", "--rcfile=.pylintrc.spelling.toml"]

  # poetry - python dependency management
  - repo: https://github.com/Cielquan/mirrors-poetry
    rev: 39c8053fdda4f42d75b365076cdddb0381c1f17f  # frozen: 2.1.3
    hooks:
      - id: poetry-check

  # ----------------------------------------------
  # Rust
  # ----------------------------------------------

  # Run rust toolchain
  - repo: local
    hooks:
      # clippy - rust linter
      - id: cargo-clippy
        name: clippy
        description: Lint rust source with clippy.
        entry: cargo clippy
        language: system
        types: [rust]
        pass_filenames: false
      # check - rust package checker
      - id: cargo-check
        name: cargo check
        description: Check rust package for errors.
        entry: cargo check
        language: system
        types: [rust]
        pass_filenames: false

  # ----------------------------------------------
  # JavaScript
  # ----------------------------------------------

  # eslint - JS linter
  - repo: https://github.com/eslint/eslint
    # Config file: .eslintrc.json | "eslintConfig" key in package.json |
    #     https://eslint.org/docs/user-guide/configuring/configuration-files
    # Ignore file: .eslintignore [file ignore pattern]
    rev: 9f8178610fb6fbdb8f6c7bb9b15ec30bb2b138bc  # frozen: v9.26.0
    hooks:
      - id: eslint
        files: \.[jt]sx?$ # *.js, *.jsx, *.ts, *.tsx
        types: [file]
        additional_dependencies:
          - eslint@7.32.0
          - eslint-config-airbnb@18.2.1
          - eslint-config-prettier@8.3.0
          - eslint-import-resolver-typescript@2.4.0
          - eslint-plugin-import@2.23.4
          - eslint-plugin-jsx-a11y@6.4.1
          - eslint-plugin-prettier@3.4.0
          - eslint-plugin-react@7.24.0
          - eslint-plugin-react-hooks@4.2.0

  # ----------------------------------------------
  # HTML
  # ----------------------------------------------

  - repo: https://github.com/Lucas-C/pre-commit-hooks-nodejs
    rev: 013455c0de40486ccf40a982d6ba68d3c0d78474 # frozen: v1.1.2
    hooks:
      # htmlhint - HTML linter
      # https://htmlhint.com/
      # Config file: .htmlhintrc [JSON|YAML|JS containing config obj] [--config/-c]
      # Ignore file: .htmlhintignore [file ignore pattern] [--ignore/-i]
      # Inline config e.g.: `<!-- htmlhint tag-pair,id-class-value:underline -->`
      - id: htmlhint
      # htmllint - HTML linter
      # https://github.com/htmllint/htmllint/wiki/Options
      # Config file (required): .htmllintrc [json] [--rc]
      # Inline config: `<!-- htmllint [key]="[value]" -->`
      - id: htmllint

  # ----------------------------------------------
  # CSS
  # ----------------------------------------------

  - repo: https://github.com/cielquan/mirrors-stylelint
    # Config file: .stylelintrc.json
    rev: 37dfe5e76e87e82618ceab6764058246328b48ce  # frozen: v16.19.1
    hooks:
      - id: stylelint
        additional_dependencies:
          - "stylelint"
          - "stylelint-config-standard"
          - "stylelint-config-tailwindcss"

  # ----------------------------------------------
  # Shell script
  # ----------------------------------------------

  # shellscript (via PyPI package)
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: a23f6b85d0fdd5bb9d564e2579e678033debbdff # frozen: v0.10.0.1
    hooks:
      - id: shellcheck

  # ----------------------------------------------
  # reStructuredText
  # ----------------------------------------------

  # rstcheck - rst file checker
  - repo: https://github.com/rstcheck/rstcheck
    rev: f30c4d170a36ea3812bceb5f33004afc213bd797  # frozen: v6.2.4
    hooks:
      # Config file: .rstcheck.cfg [--config]
      - id: rstcheck
        additional_dependencies: [sphinx]

  # ----------------------------------------------
  # JSON / TOML / YAML
  # ----------------------------------------------

  # JSON specific out-of-the-box hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: cef0300fd0fc4d2a87a85fa2093c6b283ea36f4b  # frozen: v5.0.0
    hooks:
      - id: check-json
      - id: check-toml
      - id: check-yaml

  # yamllint - yaml linter
  - repo: https://github.com/adrienverge/yamllint
    rev: 79a6b2b1392eaf49cdd32ac4f14be1a809bbd8f7  # frozen: v1.37.1
    hooks:
      # Config file: .yamllint.yaml [--config-file]
      # Inline skip: `# yamllint disable-line[ rule:<RULE>]`
      # Block skip: `# yamllint disable[ rule:<RULE>]`
      # Block skip end: `# yamllint enable`
      - id: yamllint

  # ----------------------------------------------
  # Validate .pre-commit-hooks.yaml file
  # ----------------------------------------------

  - repo: https://github.com/pre-commit/pre-commit
    rev: aa48766b888990e7b118d12cf757109d96e65a7e  # frozen: v4.2.0
    hooks:
      - id: validate_manifest
