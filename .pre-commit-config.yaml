---
minimum_pre_commit_version: "2.16"
default_stages: [commit]

ci:
  skip: [mypy, flakehell, pylint]

repos:
  # ----------------------------------------------
  # Branch guard hook
  # ----------------------------------------------

  # git context checking out-of-the-box hooks
  # - repo: https://github.com/pre-commit/pre-commit-hooks
  #   rev: 8fe62d14e0b4d7d845a7022c5c2c3ae41bdd3f26 # frozen: v4.1.0
  #   hooks:
  #     - id: no-commit-to-branch
  #       args: [--branch, main, --branch, master]
  #       fail_fast: true

  # ----------------------------------------------
  # Meta hooks
  # ----------------------------------------------

  - repo: meta
    hooks:
      - id: identity
        stages: [commit, manual]
      - id: check-hooks-apply
        stages: [manual]
      - id: check-useless-excludes
        stages: [manual]

  # ----------------------------------------------
  # File hooks
  # ----------------------------------------------

  # file checking out-of-the-box hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: 8fe62d14e0b4d7d845a7022c5c2c3ae41bdd3f26 # frozen: v4.1.0
    hooks:
      - id: check-case-conflict
      - id: check-shebang-scripts-are-executable
        exclude: '^.*\.rs$'
      - id: check-symlinks
      - id: destroyed-symlinks
      - id: forbid-new-submodules

  # ----------------------------------------------
  # Dependency hooks
  # ----------------------------------------------

  # poetry - python dependency management
  - repo: https://github.com/python-poetry/poetry
    rev: 1c0c9359a80936913338a0d27c19082dd1d0c647 # commit after add of config; wait for 1.2 release
    hooks:
      # Config file: pyproject.toml
      - id: poetry-lock
        args: ["--check", "--no-update"]
      # - id: poetry-export

  # TODO: find new way to get all deps with poetry 1.2
  # safety - python dependency vulnerability checker
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: c20e8a8125a5a51997164feb846a7171b50b5fe6 # frozen: v1.2.2
    hooks:
      # poetry export is missing extras (optional deps)
      - id: python-safety-dependencies-check
        args: ["--full-report"]
        # files: pyproject.toml

  # ####################################################################################
  #
  #       FORMATTING
  #
  # ####################################################################################

  # ----------------------------------------------
  # Python
  # ----------------------------------------------

  # pyupgrade - upgrade old syntax to new
  - repo: https://github.com/asottile/pyupgrade
    rev: e695ecd365119ab4e5463f6e49bea5f4b7ca786b # frozen: v2.31.0
    hooks:
      - id: pyupgrade
        args: ["--py37-plus"]

  # isort - sort imports
  - repo: https://github.com/PyCQA/isort
    rev: c5e8fa75dda5f764d20f66a215d71c21cfa198e1 # frozen: 5.10.1
    hooks:
      # Config file: pyproject.toml | .isort.cfg | tox.ini |
      #     https://pycqa.github.io/isort/docs/configuration/config_files
      # Inline skip: `# isort: skip`
      - id: isort

  # black - python formatter
  - repo: https://github.com/psf/black
    rev: f1d4e742c91dd5179d742b0db9293c4472b765f8 # frozen: 21.12b0
    hooks:
      # Config file: pyproject.toml
      # Inline skip: mark block with `# fmt: off` and `# fmt: on` (same indent)
      - id: black
        args: ["--safe"]

  # blacken-docs - black for python code in docs (rst/md/tex)
  - repo: https://github.com/asottile/blacken-docs
    rev: 505d32bce506de38b525d374490f36346540d5fa # frozen: v1.12.0
    hooks:
      # Config file: same as `black`
      # Inline skip: same as `black`
      - id: blacken-docs

  # ----------------------------------------------
  # Rust
  # ----------------------------------------------

  # rust toolchain
  - repo: local
    hooks:
      # rustfmt - rust formatter
      # Config file: rustfmt.toml
      - id: cargo-fmt
        name: rustfmt
        description: Format rust source with rustfmt.
        entry: cargo fmt
        args: ["--"]
        language: system
        types: [rust]

  # ----------------------------------------------
  # JS / TS / HTML / CSS / MD / JSON / YAML
  # ----------------------------------------------

  # prettier - multi formatter
  - repo: https://github.com/pre-commit/mirrors-prettier
    # https://github.com/prettier/prettier
    # Config file: "prettier" key package.json | .prettierrc | .prettierrc.toml |
    #     https://prettier.io/docs/en/configuration.html
    # Ignore file: .prettierignore [file ignore pattern]
    rev: ea782651a7e32f40a3d13b76c79d5a2474ee8723 # frozen: v2.5.1
    hooks:
      - id: prettier

  # ----------------------------------------------
  # General (code unspecific)
  # ----------------------------------------------

  # code unspecific out-of-the-box hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: 8fe62d14e0b4d7d845a7022c5c2c3ae41bdd3f26 # frozen: v4.1.0
    hooks:
      - id: end-of-file-fixer
        stages: [commit]
      - id: trailing-whitespace
        stages: [commit]

  # ####################################################################################
  #
  #       LINTING
  #
  # ####################################################################################

  # ----------------------------------------------
  # General (code unspecific)
  # ----------------------------------------------

  - repo: local
    hooks:
      # Find TODO:|FIXME:|BUG: comments in all files
      # Inline skip: `#i#` directly after the colon after the tag-word
      - id: find-todos
        name: "Find TODO:|FIXME:|BUG: comments"
        description: "Check for TODO:|FIXME:|BUG: comments in all files"
        language: pygrep
        entry: '(^|//!?|#|<!--|;|/\*(\*|!)?|\.\.)\s*(TODO:|FIXME:|BUG:)(?!#i#)'
        exclude: TODO

  # code unspecific out-of-the-box hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: 8fe62d14e0b4d7d845a7022c5c2c3ae41bdd3f26 # frozen: v4.1.0
    hooks:
      - id: check-merge-conflict
      - id: detect-private-key

  # ----------------------------------------------
  # Python
  # ----------------------------------------------

  # python specific out-of-the-box hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: 8fe62d14e0b4d7d845a7022c5c2c3ae41bdd3f26 # frozen: v4.1.0
    hooks:
      - id: debug-statements
      - id: fix-encoding-pragma
        args: ["--remove"]
      - id: name-tests-test
        args: ["--django"]

  # several python code regex hooks
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: 6f51a66bba59954917140ec2eeeaa4d5e630e6ce # frozen: v1.9.0
    hooks:
      - id: python-check-blanket-noqa
      - id: python-check-blanket-type-ignore
      - id: python-check-mock-methods
      - id: python-no-eval
      - id: python-no-log-warn

  # Lint hooks managed via tox `pre-commit` env b/c they need the pkg installed
  - repo: local
    hooks:
      # mypy - python type checker
      # Config file: https://mypy.readthedocs.io/en/stable/command_line.html#config-file
      # Inline skip file: `# type: ignore` at top
      # Inline skip: `# type: ignore` or `# type: ignore[CODE, ...]`
      - id: mypy
        name: mypy
        description: run mypy over the installed version if available
        entry: env_exe_runner tox,.venv pre_commit mypy
        language: system
        types: [python]
        require_serial: true
      # flake8 - python linter
      # Inline skip file: `# flake8: noqa`
      # Inline skip: `# noqa` or `# noqa: CODE,...`
      - id: flakeheaven
        name: flakeheaven
        description: run flakeheaven over the installed version if available
        entry: env_exe_runner tox,.venv pre_commit flakeheaven
        args: ["lint", "--safe"]
        language: system
        types: [python]
        require_serial: true

  # pylint - python linter
  - repo: https://github.com/PyCQA/pylint/
    rev: eec287fae66f8fc514d5daa9caee46fd0e0cb6d9 # frozen: v2.12.2
    hooks:
      # Inline skip file: `# pylint: skip-file`
      # Inline change: `# pylint: disable|enable=CODE|NAME`
      - id: pylint
        name: spell-check (pylint+pyenchant)
        description: >
          spell-check in docstrings/comments in py-source via pyenchant and pylint
        args: ["--disable=all", "--enable=spelling"]
        additional_dependencies: [pyenchant]
        exclude: "^(?!src).*"

  # poetry - python dependency management
  - repo: https://github.com/python-poetry/poetry
    rev: 1c0c9359a80936913338a0d27c19082dd1d0c647 # commit after add of config; wait for 1.2 release
    hooks:
      - id: poetry-check

  # ----------------------------------------------
  # Rust
  # ----------------------------------------------

  # Run rust toolchain
  - repo: local
    hooks:
      # clippy - rust linter
      - id: cargo-clippy
        name: clippy
        description: Lint rust source with clippy.
        entry: cargo clippy
        language: system
        types: [rust]
        pass_filenames: false
      # check - rust package checker
      - id: cargo-check
        name: cargo check
        description: Check rust package for errors.
        entry: cargo check
        language: system
        types: [rust]
        pass_filenames: false

  # ----------------------------------------------
  # JavaScript
  # ----------------------------------------------

  # eslint - JS linter
  - repo: https://github.com/eslint/eslint
    # Config file: .eslintrc.json | "eslintConfig" key in package.json |
    #     https://eslint.org/docs/user-guide/configuring/configuration-files
    # Ignore file: .eslintignore [file ignore pattern]
    rev: b5aa1387441dea027662c4365f51e9e6f68089bd # frozen: v8.7.0
    hooks:
      - id: eslint
        files: \.[jt]sx?$ # *.js, *.jsx, *.ts, *.tsx
        types: [file]

  # ----------------------------------------------
  # HTML
  # ----------------------------------------------

  - repo: https://github.com/Lucas-C/pre-commit-hooks-nodejs
    rev: b234899b5db911d0e5482deffcf4e6364ad349d0 # frozen: v1.1.1
    hooks:
      # htmlhint - HTML linter
      # https://htmlhint.com/
      # Config file: .htmlhintrc [JSON|YAML|JS containing config obj] [--config/-c]
      # Ignore file: .htmlhintignore [file ignore pattern] [--ignore/-i]
      # Inline config e.g.: `<!-- htmlhint tag-pair,id-class-value:underline -->`
      - id: htmlhint
      # htmllint - HTML linter
      # https://github.com/htmllint/htmllint/wiki/Options
      # Config file (required): .htmllintrc [json] [--rc]
      # Inline config: `<!-- htmllint [key]="[value]" -->`
      - id: htmllint

  # ----------------------------------------------
  # CSS
  # ----------------------------------------------

  # TODO: https://github.com/stylelint/stylelint

  # # csslint - CSS linter
  # - repo: https://github.com/pre-commit/mirrors-csslint
  #   # https://github.com/CSSLint/csslint
  #   # Config file: .csslintrc [--config]
  #   rev: 818b64c6bf19ca1e089b4dabc8dc74059b405814 # frozen: v1.0.5
  #   hooks:
  #     - id: csslint

  # # scss-lint - SCSS linter
  # - repo: https://github.com/pre-commit/mirrors-scss-lint
  #   # https://github.com/sds/scss-lint
  #   rev: a1648868c160f1ca0acedef6dc51541c91ee04c6 # frozen: v0.59.0
  #   hooks:
  #     - id: scss-lint

  # ----------------------------------------------
  # Shell script
  # ----------------------------------------------

  # shellscript (via PyPI package)
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: 1cd4049379afa32e79a6a9b6ce0cd789d3fcd731 # frozen: v0.8.0.3
    hooks:
      - id: shellcheck

  # ----------------------------------------------
  # reStructuredText
  # ----------------------------------------------

  # rstcheck - rst file checker
  - repo: https://github.com/myint/rstcheck
    rev: 3f92957478422df87bd730abde66f089cc1ee19b # commit after add of config; wait for release
    hooks:
      # Config file: .rstcheck.cfg [--config]
      - id: rstcheck
        additional_dependencies: [sphinx]
        args: ["--config=tox.ini"]

  # ----------------------------------------------
  # JSON / TOML / YAML
  # ----------------------------------------------

  # JSON specific out-of-the-box hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: 8fe62d14e0b4d7d845a7022c5c2c3ae41bdd3f26 # frozen: v4.1.0
    hooks:
      - id: check-json
      - id: check-toml
      - id: check-yaml

  # yamllint - yaml linter
  - repo: https://github.com/adrienverge/yamllint
    rev: 058fef75598d1a9d9250487d91549abf379878e0 # frozen: v1.26.3
    hooks:
      # Config file: .yamllint (yaml) [--config-file]
      # Inline skip: `# yamllint disable-line[ rule:<RULE>]`
      # Block skip: `# yamllint disable[ rule:<RULE>]`
      # Block skip end: `# yamllint enable`
      - id: yamllint

  # ----------------------------------------------
  # Validate .pre-commit-hooks.yaml file
  # ----------------------------------------------

  - repo: https://github.com/pre-commit/pre-commit
    rev: d3bdf1403d92f8cf2dc77bd99a5da42f0a6cef17 # frozen: v2.17.0
    hooks:
      - id: validate_manifest
