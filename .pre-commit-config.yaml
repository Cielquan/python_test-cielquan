---
minimum_pre_commit_version: "2.16"
default_stages: [commit]

ci:
  skip: [mypy, flakeheaven, pylint]

repos:
  # ----------------------------------------------
  # Branch guard hook
  # ----------------------------------------------

  # git context checking out-of-the-box hooks
  # - repo: https://github.com/pre-commit/pre-commit-hooks
  #   rev: 8fe62d14e0b4d7d845a7022c5c2c3ae41bdd3f26 # frozen: v4.1.0
  #   hooks:
  #     - id: no-commit-to-branch
  #       args: [--branch, main, --branch, master]
  #       fail_fast: true

  # ----------------------------------------------
  # Meta hooks
  # ----------------------------------------------

  - repo: meta
    hooks:
      - id: identity
        stages: [commit, manual]
      - id: check-hooks-apply
        stages: [manual]
      - id: check-useless-excludes
        stages: [manual]

  # ----------------------------------------------
  # File hooks
  # ----------------------------------------------

  # file checking out-of-the-box hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: c4a0b883114b00d8d76b479c820ce7950211c99b # frozen: v4.5.0
    hooks:
      - id: check-case-conflict
      - id: check-shebang-scripts-are-executable
        exclude: '^.*\.rs$'
      - id: check-symlinks
      - id: destroyed-symlinks
      - id: forbid-new-submodules

  # ----------------------------------------------
  # Dependency hooks
  # ----------------------------------------------

  # poetry - python dependency management
  - repo: https://github.com/Cielquan/mirrors-poetry
    rev: ec25c4d5817d8bcf1d6251c347a1892cb817edb8  # frozen: 1.8.2
    hooks:
      # Config file: pyproject.toml
      - id: poetry-lock
        args: ["--check", "--no-update"]

  # safety - python dependency vulnerability checker
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: 3f01891d76160f03e9134ef025fb1eb1d10c85a2  # frozen: v1.3.3
    hooks:
      - id: python-safety-dependencies-check
        args: ["--full-report"]
        files: pyproject.toml

  # ####################################################################################
  #
  #       FORMATTING
  #
  # ####################################################################################

  # ----------------------------------------------
  # Python
  # ----------------------------------------------

  # ruff - python linter with fixing ability
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: 1986670a8c4578a526ad3dddee3b35d9cfb9d7be  # frozen: v0.3.4
    hooks:
      - id: ruff
        name: ruff (fix)
        args: ["--fix-only", "--exit-non-zero-on-fix"]

  # TODO:#i# remove b/c ruff
  # pyupgrade - upgrade old syntax to new
  - repo: https://github.com/asottile/pyupgrade
    rev: 12af25eb252deaaecb6b259df40d01f42e716dc3  # frozen: v3.15.2
    hooks:
      - id: pyupgrade
        args: ["--py37-plus"]

  # TODO:#i# remove b/c ruff
  # isort - sort imports
  - repo: https://github.com/PyCQA/isort
    rev: c235f5e450b4b84e58d114ed4c589cbf454175a3 # frozen: 5.13.2
    hooks:
      # Config file: pyproject.toml | .isort.cfg | tox.ini |
      #     https://pycqa.github.io/isort/docs/configuration/config_files
      # Inline skip: `# isort: skip`
      - id: isort

  # black - python formatter
  - repo: https://github.com/psf/black
    rev: 552baf822992936134cbd31a38f69c8cfe7c0f05  # frozen: 24.3.0
    hooks:
      # Config file: pyproject.toml
      # Inline skip: mark block with `# fmt: off` and `# fmt: on` (same indent)
      - id: black
        args: ["--safe"]

  # blacken-docs - black for python code in docs (rst/md/tex)
  - repo: https://github.com/asottile/blacken-docs
    rev: 960ead214cd1184149d366c6d27ca6c369ce46b6 # frozen: 1.16.0
    hooks:
      # Config file: same as `black`
      # Inline skip: same as `black`
      - id: blacken-docs

  # ----------------------------------------------
  # Rust
  # ----------------------------------------------

  # rust toolchain
  - repo: local
    hooks:
      # rustfmt - rust formatter
      # Config file: rustfmt.toml
      - id: cargo-fmt
        name: rustfmt
        description: Format rust source with rustfmt.
        entry: cargo fmt
        args: ["--"]
        language: system
        types: [rust]

  # ----------------------------------------------
  # JS / TS / HTML / CSS / MD / JSON / YAML
  # ----------------------------------------------

  # prettier - multi formatter
  - repo: https://github.com/pre-commit/mirrors-prettier
    # https://github.com/prettier/prettier
    # Config file: "prettier" key package.json | .prettierrc | .prettierrc.json |
    #     https://prettier.io/docs/en/configuration.html
    # Ignore file: .prettierignore [file ignore pattern]
    rev: f12edd9c7be1c20cfa42420fd0e6df71e42b51ea # frozen: v4.0.0-alpha.8
    hooks:
      - id: prettier
        additional_dependencies:
          - "prettier@^2.5.1"
          - "@trivago/prettier-plugin-sort-imports@^3.2.0"

  # ----------------------------------------------
  # SQL
  # ----------------------------------------------

  # sqlfluff - SQL linter and formatter
  - repo: https://github.com/sqlfluff/sqlfluff
    # Config file: ".sqlfluff"
    # Ignore file: .sqlfluffignore [file ignore pattern]
    rev: 40bdc4b95ebf83c41015ac01afba9746b8b73ead  # frozen: 3.0.3
    hooks:
      - id: sqlfluff-fix

  # ----------------------------------------------
  # Spelling dict
  # ----------------------------------------------

  # Custom hook as python command
  - repo: local
    hooks:
      - id: sort-spelling-dicts
        name: Sort spelling_dict.txt files
        description: Sort spelling_dict.txt files
        language: python
        entry: python
        args:
          - "-c"
          - |
            import pathlib;
            import sys;
            p = pathlib.Path(sys.argv[1]);
            p.write_text("\n".join(sorted(set(p.read_text("utf-8").splitlines()))) + "\n", "utf-8")
        files: "spelling_dict.txt"

  # ----------------------------------------------
  # General (code unspecific)
  # ----------------------------------------------

  # code unspecific out-of-the-box hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: c4a0b883114b00d8d76b479c820ce7950211c99b # frozen: v4.5.0
    hooks:
      - id: end-of-file-fixer
        stages: [commit]
      - id: trailing-whitespace
        stages: [commit]

  # ####################################################################################
  #
  #       LINTING
  #
  # ####################################################################################

  # ----------------------------------------------
  # General (code unspecific)
  # ----------------------------------------------

  - repo: local
    hooks:
      # Find TODO:|FIXME:|BUG: comments in all files
      # Inline skip: `#i#` directly after the colon after the tag-word
      - id: find-todos
        name: "Find TODO:|FIXME:|BUG: comments"
        description: "Check for TODO:|FIXME:|BUG: comments in all files"
        language: pygrep
        entry: '(^|//!?|#|<!--|;|/\*(\*|!)?|\.\.)\s*(TODO:|FIXME:|BUG:)(?!#i#)'
        exclude: TODO

  # code unspecific out-of-the-box hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: c4a0b883114b00d8d76b479c820ce7950211c99b # frozen: v4.5.0
    hooks:
      - id: check-merge-conflict
      - id: detect-private-key

  # ----------------------------------------------
  # Python
  # ----------------------------------------------

  # ruff - python linter with fixing ability
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: 1986670a8c4578a526ad3dddee3b35d9cfb9d7be  # frozen: v0.3.4
    hooks:
      - id: ruff
        name: ruff (lint)

  # python specific out-of-the-box hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: c4a0b883114b00d8d76b479c820ce7950211c99b # frozen: v4.5.0
    hooks:
      - id: debug-statements
      - id: fix-encoding-pragma
        args: ["--remove"]
      - id: name-tests-test

  # TODO:#i# remove b/c all are/will be impl by ruff
  # several python code regex hooks
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: 3a6eb0fadf60b3cccfd80bad9dbb6fae7e47b316 # frozen: v1.10.0
    hooks:
      - id: python-check-blanket-noqa
      - id: python-check-blanket-type-ignore
      - id: python-check-mock-methods
      - id: python-no-eval
      - id: python-no-log-warn

  # TODO:#i# remove b/c ruff
  # flakeheaven - wrapper for flake8
  - repo: https://github.com/flakeheaven/flakeheaven
    rev: "289c489c9654342dae2ad871527c5951acb2f22d" # frozen: 3.3.0
    hooks:
      # flake8 - python linter
      # Inline skip file: `# flake8: noqa`
      # Inline skip: `# noqa` or `# noqa: CODE,...`
      - id: flakeheaven
        additional_dependencies:
          - "git+https://github.com/cielquan/my-flake8-plugins.git@v1.0.1"

  # Lint hooks managed via tox envs b/c they need the pkg installed
  - repo: local
    hooks:
      # mypy - python type checker
      # Config file: https://mypy.readthedocs.io/en/stable/command_line.html#config-file
      # Inline skip file: `# type: ignore` at top
      # Inline skip: `# type: ignore` or `# type: ignore[CODE, ...]`
      - id: mypy
        name: mypy
        description: run mypy over the installed package via tox
        entry: tox
        args: ["-e", "mypy"]
        language: python
        additional_dependencies: [tox]
        types: [python]
        pass_filenames: false
        require_serial: true
        # pylint - python linter
        # Inline skip file: `# pylint: skip-file`
        # Inline change: `# pylint: disable|enable=CODE|NAME`
        # TODO:#i# remove b/c ruff
      - id: pylint
        name: pylint
        description: run pylint over the installed package via tox
        entry: tox
        args: ["-e", "pylint"]
        language: python
        additional_dependencies: [tox]
        types: [python]
        require_serial: true

  # pylint - python linter
  - repo: https://github.com/PyCQA/pylint/
    rev: 053c2c3a25f97f043e10cdd41d2609e495a68f57  # frozen: v3.1.0
    hooks:
      # Inline skip file: `# pylint: skip-file`
      # Inline change: `# pylint: disable|enable=CODE|NAME`
      - id: pylint
        name: spell-check (pylint+pyenchant)
        description: >
          spell-check in docstrings/comments in py-source via pyenchant and pylint
        args: ["--disable=all", "--enable=spelling"]
        additional_dependencies: [pyenchant]
        exclude: "^(?!src).*"

  # poetry - python dependency management
  - repo: https://github.com/Cielquan/mirrors-poetry
    rev: ec25c4d5817d8bcf1d6251c347a1892cb817edb8  # frozen: 1.8.2
    hooks:
      - id: poetry-check

  # ----------------------------------------------
  # Rust
  # ----------------------------------------------

  # Run rust toolchain
  - repo: local
    hooks:
      # clippy - rust linter
      - id: cargo-clippy
        name: clippy
        description: Lint rust source with clippy.
        entry: cargo clippy
        language: system
        types: [rust]
        pass_filenames: false
      # check - rust package checker
      - id: cargo-check
        name: cargo check
        description: Check rust package for errors.
        entry: cargo check
        language: system
        types: [rust]
        pass_filenames: false

  # ----------------------------------------------
  # JavaScript
  # ----------------------------------------------

  # eslint - JS linter
  - repo: https://github.com/eslint/eslint
    # Config file: .eslintrc.json | "eslintConfig" key in package.json |
    #     https://eslint.org/docs/user-guide/configuring/configuration-files
    # Ignore file: .eslintignore [file ignore pattern]
    rev: 6c0fc35b46bc7f3de0a59b061cf38e2bd7e6f022  # frozen: v9.0.0-rc.0
    hooks:
      - id: eslint
        files: \.[jt]sx?$ # *.js, *.jsx, *.ts, *.tsx
        types: [file]
        additional_dependencies:
          - eslint@7.32.0
          - eslint-config-airbnb@18.2.1
          - eslint-config-prettier@8.3.0
          - eslint-import-resolver-typescript@2.4.0
          - eslint-plugin-import@2.23.4
          - eslint-plugin-jsx-a11y@6.4.1
          - eslint-plugin-prettier@3.4.0
          - eslint-plugin-react@7.24.0
          - eslint-plugin-react-hooks@4.2.0

  # ----------------------------------------------
  # HTML
  # ----------------------------------------------

  - repo: https://github.com/Lucas-C/pre-commit-hooks-nodejs
    rev: 013455c0de40486ccf40a982d6ba68d3c0d78474 # frozen: v1.1.2
    hooks:
      # htmlhint - HTML linter
      # https://htmlhint.com/
      # Config file: .htmlhintrc [JSON|YAML|JS containing config obj] [--config/-c]
      # Ignore file: .htmlhintignore [file ignore pattern] [--ignore/-i]
      # Inline config e.g.: `<!-- htmlhint tag-pair,id-class-value:underline -->`
      - id: htmlhint
      # htmllint - HTML linter
      # https://github.com/htmllint/htmllint/wiki/Options
      # Config file (required): .htmllintrc [json] [--rc]
      # Inline config: `<!-- htmllint [key]="[value]" -->`
      - id: htmllint

  # ----------------------------------------------
  # CSS
  # ----------------------------------------------

  - repo: https://github.com/cielquan/mirrors-stylelint
    # Config file: .stylelintrc.json
    rev: 1a56c69c880eaeb739424df29350a02d7c19c810  # frozen: v16.3.1
    hooks:
      - id: stylelint
        additional_dependencies:
          - "stylelint"
          - "stylelint-config-standard"
          - "stylelint-config-prettier"
          - "stylelint-config-tailwindcss"

  # ----------------------------------------------
  # Shell script
  # ----------------------------------------------

  # shellscript (via PyPI package)
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: a23f6b85d0fdd5bb9d564e2579e678033debbdff  # frozen: v0.10.0.1
    hooks:
      - id: shellcheck

  # ----------------------------------------------
  # reStructuredText
  # ----------------------------------------------

  # rstcheck - rst file checker
  - repo: https://github.com/rstcheck/rstcheck
    rev: 445861c31d8134562e723d77115721038de2e687 # frozen: v6.2.0
    hooks:
      # Config file: .rstcheck.cfg [--config]
      - id: rstcheck
        additional_dependencies: [sphinx]

  # ----------------------------------------------
  # Markdown
  # ----------------------------------------------

  # markdownlint - md file checker
  - repo: https://github.com/DavidAnson/markdownlint-cli2
    rev: 82c791e94c2e2ab2119437d61c722c8e0c20d6c9  # frozen: v0.12.1
    # Config files:
    # - .markdownlint-cli2.jsonc
    # - .markdownlint-cli2.yaml
    # - .markdownlint-cli2.cjs
    # - .markdownlint.jsonc or .markdownlint.json
    # - .markdownlint.yaml or .markdownlint.yml
    # - .markdownlint.cjs
    # Inline config:
    # Disable all rules: <!-- markdownlint-disable -->
    # Enable all rules: <!-- markdownlint-enable -->
    # Disable all rules for the next line only: <!-- markdownlint-disable-next-line -->
    # Disable rules by name: <!-- markdownlint-disable MD001 MD005 -->
    # Enable rules by name: <!-- markdownlint-enable MD001 MD005 -->
    # Disable rules by name for next line only: <!-- markdownlint-disable-next-line MD001 MD005 -->
    # Capture the current rule configuration: <!-- markdownlint-capture -->
    # Restore the captured rule configuration: <!-- markdownlint-restore -->
    hooks:
      - id: markdownlint-cli2

  # ----------------------------------------------
  # JSON / TOML / YAML
  # ----------------------------------------------

  # JSON specific out-of-the-box hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: c4a0b883114b00d8d76b479c820ce7950211c99b # frozen: v4.5.0
    hooks:
      - id: check-json
      - id: check-toml
      - id: check-yaml

  # yamllint - yaml linter
  - repo: https://github.com/adrienverge/yamllint
    rev: 81e9f98ffd059efe8aa9c1b1a42e5cce61b640c6  # frozen: v1.35.1
    hooks:
      # Config file: .yamllint.yaml [--config-file]
      # Inline skip: `# yamllint disable-line[ rule:<RULE>]`
      # Block skip: `# yamllint disable[ rule:<RULE>]`
      # Block skip end: `# yamllint enable`
      - id: yamllint

  # ----------------------------------------------
  # Validate .pre-commit-hooks.yaml file
  # ----------------------------------------------

  - repo: https://github.com/pre-commit/pre-commit
    rev: 7b4667e9e6e05e31707c404c95115b151745866c  # frozen: v3.7.0
    hooks:
      - id: validate_manifest
